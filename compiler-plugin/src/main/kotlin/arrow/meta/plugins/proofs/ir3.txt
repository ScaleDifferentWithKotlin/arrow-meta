CALL 'public final fun applicative (): arrowx.Applicative<arrowx.ForId> declared in arrowx.TypeclassesKt' type=arrowx.Applicative<arrowx.ForId> origin=null
  $receiver: CALL 'public final fun fix <A> (): arrowx.Id<A of arrowx.TypeclassesKt.fix> declared in arrowx.TypeclassesKt' type=arrowx.Id<A of arrowx.TypeclassesKt.fix> origin=null
    <A>: kotlin.Int
    $receiver: CALL 'public abstract fun just <A> (a: A of arrowx.Applicative.just): arrowx.Kind22<F of arrowx.Applicative, A of arrowx.Applicative.just, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }>{ arrowx.KindsKt.Kind<F of arrowx.Applicative, A of arrowx.Applicative.just> } declared in arrowx.Applicative' type=arrowx.Kind22<arrowx.ForId, kotlin.Int, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }, arrow.Impossible{ arrow.ImpossibleKt.ðŸš« }>{ arrowx.KindsKt.Kind<arrowx.ForId, kotlin.Int> } origin=null
      <A>: kotlin.Int
      $this: GET_OBJECT 'CLASS IR_EXTERNAL_DECLARATION_STUB OBJECT name:Companion modality:FINAL visibility:public [companion] superTypes:[kotlin.Any]' type=arrowx.Id.Companion
      a: CONST Int type=kotlin.Int value=1
